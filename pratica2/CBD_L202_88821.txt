// NMEC 88821

#1
db.rest.find()

# 2
db.rest.find({}, {
   restaurant_id: 1,
   nome: 1,
   localidade: 1,
   gastronomia: 1
})

#3
db.rest.find({}, {_id: 0, restaurant_id: 1, nome:1, localidade: 1, zipcode:1})

# 4
db.rest.find({
   localidade: 'Bronx'
}).count()

#5
db.rest.find({localidade: 'Bronx'}).limit(5)

# 6
db.rest.find({
   'grades.score': {
      $gt: 85
   }
})

#7
db.rest.find({'grades.score': {$gte: 80, $lte: 100}})

# 8
db.rest.find({
   'address.coord.0': {
      $lt: -95.7
   }
})

#9
db.rest.find({
   gastronomia: {$ne: 'American'}, 
   'grades.score': {$gt: 70}, 
   'address.coord.0': {$lt: -65}
})

# 10
db.rest.find({
   'nome': /^Wil/
}, {
   restaurant_id: 1,
   nome: 1,
   localidade: 1,
   gastronomia: 1
})

#11
db.rest.find(
   {
      localidade: 'Bronx', 
      gastronomia: {$in: ['American', 'Chinese']}
   }, 
   {
      nome: 1, 
      localidade: 1, 
      gastronomia: 1
   }
)

# 12
db.rest.find({
   localidade: {
      $in: ["Staten Island", "Queens", "Bronx", "Brooklyn"]
   }
}, {
   nome: 1,
   "grades.score": 1,
   gastronomia: 1
}).pretty()

# 13
db.rest.find({
   "grades.score": {
      $not: {
         $gt: 3
      }
   }
}, {
   nome: 1,
   localidade: 1,
   "grades.score": 1,
   gastronomia: 1
}).pretty()

# 14
db.rest.find({
   grades: {
      $elemMatch: {
         grade: "A",
         score: 10,
         date: new ISODate("2014-08-11T00:00:00Z")
      }
   }
}, {
   restaurant_id: 1,
   nome: 1,
   "grades.score": 1,
   grades: 1
}).pretty()

# 15
db.rest.find({
   "grades.1.grade": "A",
   "grades.1.date": new ISODate("2014-08-11T00:00:00Z")
}, {
   restaurant_id: 1,
   nome: 1,
   "grades.score": 1,
   grades: 1
}).pretty()

# 16
db.rest.find({
   "address.coord.1": {
      $gt: 42,
      $lte: 52
   }
}, {
   restaurant_id: 1,
   nome: 1,
   address: 1
}).pretty()

# 17
db.rest.aggregate([{
   $project: {
      nome: 1
   }
}, {
   $sort: {
      nome: 1
   }
}])

# 18
db.rest.aggregate([{
   $project: {
      nome: 1,
      gastronomia: 1,
      localidade: 1
   }
}, {
   $sort: {
      gastronomia: 1,
      localidade: -1
   }
}])

# 19
db.rest.aggregate([{
   $match: {
      localidade: "Brooklyn",
      gastronomia: {
         $ne: "American"
      },
      "grades.grade": "A"
   }
}, {
   $project: {
      nome: 1,
      gastronomia: 1,
      localidade: 1,
      "grades.grade": 1
   }
}, {
   $sort: {
      gastronomia: -1
   }
}])

# 20
db.rest.aggregate([{
   $group: {
      _id: "$localidade",
      number: {
         $sum: 1
      }
   }
}])

# 21
db.rest.aggregate([{
   $project: {
      restaurant: "$restaurant_id",
      avg_score: {
         $avg: "$grades.score"
      }
   }
}, {
   $match: {
      avg_score: {
         $gt: 30
      }
   }
}])

# 22
db.rest.aggregate([{
   $match: {
      "gastronomia": "American",
      "address.coord.0": {
         $lt: -65
      }
   }
}, {
   $unwind: "$grades"
}, {
   $group: {
      _id: "$nome",
      sum_scores: {
         $sum: "$grades.score"
      }
   }
}]).pretty()

# 23
db.rest.aggregate([{
   $group: {
      _id: "$gastronomia",
      number: {
         $sum: 1
      }
   }
}, {
   $sort: {
      number: -1
   }
}]).pretty()

# 24
db.rest.aggregate([{
   $match: {
      "address.rua": "Flatbush Avenue"
   }
}, {
   $project: {
      gastronomias: "$gastronomia"
   }
}, {
   $group: {
      _id: null,
      number: {
         $sum: 1
      }
   }
}])

# 25
db.rest.aggregate([{
   $group: {
      _id: "$address.rua",
      number: {
         $sum: 1
      }
   }
}, {
   $sort: {
      number: -1
   }
}])

# 26 - > Restaurantes ordenados por número de avaliações que obtiveram
db.rest.aggregate([{
   $project: {
      nome: "$nome",
      num_grades: {
         $size: "$grades"
      }
   }
}, {
   $sort: {
      num_grades: -1
   }
}]).pretty()

# 27 - > Apresentar todos os restaurantes que já receberam uma pontuação negativa
db.rest.find({
   "grades.score": {
      $lt: 0
   }
}).pretty()

# 28 - > Apresentar o número de diferentes gastronomias
db.rest.aggregate([{
   $group: {
      _id: null,
      diff_rest: {
         $addToSet: "$gastronomia"
      }
   }
}, {
   $unwind: "$diff_rest"
}, {
   $group: {
      _id: null,
      number: {
         $sum: 1
      }
   }
}])

# 29 - > Qual o restaurante com o nome de maior comprimento
db.rest.aggregate([{
   $project: {
      nome: 1,
      size: {
         $strLenCP: "$nome"
      }
   }
}, {
   $sort: {
      size: -1
   }
}, {
   $limit: 1
}]).pretty()

# 30 - > Restaurante com a grade mais antiga
db.rest.aggregate([{
   $unwind: "$grades"
}, {
   $sort: {
      "grades.date": -1
   }
}, {
   $limit: 1
}]).pretty()
